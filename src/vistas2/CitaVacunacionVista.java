package vistas2;

import Entidades.CentroVacunacion;
import Entidades.Ciudadano;
import Entidades.Vacuna;
import Entidades.citaVacunacion;
import accesoADatos.CentroVacunacionData;
import accesoADatos.CiudadanoData;
import accesoADatos.Conexion;
import accesoADatos.VacunaData;
import accesoADatos.citaVacunacionData;
import java.awt.Image;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tian_
 */
public class CitaVacunacionVista extends javax.swing.JPanel {
    private DefaultTableModel modelo;
    private CiudadanoData ciudadanoData;
    private CentroVacunacionData centroVacunacionData;
    private VacunaData vacunaData;
    private citaVacunacionData citaData;
    public CitaVacunacionVista() {
        initComponents();
        modelo=(DefaultTableModel)jTable1.getModel();
        ciudadanoData = new CiudadanoData(Conexion.getConexion());
        centroVacunacionData = new CentroVacunacionData(Conexion.getConexion());
        vacunaData = new VacunaData(Conexion.getConexion());
        citaData = new citaVacunacionData(Conexion.getConexion());
        cabecera();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jBBuscar = new javax.swing.JButton();
        jBModificar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jDCFechaHoraVac = new com.toedter.calendar.JDateChooser();
        jTCodCita = new javax.swing.JTextField();
        jTCiudadano = new javax.swing.JTextField();
        jTDosis = new javax.swing.JTextField();
        jTCentroVac = new javax.swing.JTextField();
        jDCFechaHoraCita = new com.toedter.calendar.JDateChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBPostergarCitas = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(137, 161, 209));

        jTabbedPane2.setBackground(new java.awt.Color(191, 200, 209));
        jTabbedPane2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(137, 161, 209));

        jPanel3.setBackground(new java.awt.Color(108, 132, 197));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(48, 52, 59));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Formulario de Cita Vacunación");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jSeparator1.setBackground(new java.awt.Color(48, 52, 59));
        jSeparator1.setForeground(new java.awt.Color(48, 52, 59));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 895, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(149, 149, 149)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addGap(149, 149, 149))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(271, 271, 271)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(300, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(3, 3, 3)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(191, 200, 209));
        jPanel4.setForeground(new java.awt.Color(207, 214, 221));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(59, 66, 109));
        jLabel2.setText("DNI Ciudadano");

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(59, 66, 109));
        jLabel3.setText("Codigo Cita:");

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(59, 66, 109));
        jLabel4.setText("Fecha y Hora Cita:");

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(59, 66, 109));
        jLabel5.setText("Fecha y Hora Vacunación:");

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(59, 66, 109));
        jLabel6.setText("ID Centro de Vacunación:");

        jLabel8.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(59, 66, 109));
        jLabel8.setText("Nro Serie Dosis:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        jPanel5.setBackground(new java.awt.Color(108, 132, 197));

        jBBuscar.setBackground(new java.awt.Color(59, 66, 109));
        jBBuscar.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jBBuscar.setForeground(new java.awt.Color(246, 247, 248));
        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jBModificar.setBackground(new java.awt.Color(59, 66, 109));
        jBModificar.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jBModificar.setForeground(new java.awt.Color(246, 247, 248));
        jBModificar.setText("Modificar");
        jBModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarActionPerformed(evt);
            }
        });

        jBEliminar.setBackground(new java.awt.Color(59, 66, 109));
        jBEliminar.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jBEliminar.setForeground(new java.awt.Color(246, 247, 248));
        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBAgregar.setBackground(new java.awt.Color(59, 66, 109));
        jBAgregar.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jBAgregar.setForeground(new java.awt.Color(246, 247, 248));
        jBAgregar.setText("Agregar");
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(48, 52, 59));
        jSeparator2.setForeground(new java.awt.Color(48, 52, 59));

        jSeparator3.setBackground(new java.awt.Color(48, 52, 59));
        jSeparator3.setForeground(new java.awt.Color(48, 52, 59));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jBModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118)
                .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 33, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 33, Short.MAX_VALUE)))
        );

        jPanel6.setBackground(new java.awt.Color(191, 200, 209));
        jPanel6.setForeground(new java.awt.Color(207, 214, 221));

        jDCFechaHoraVac.setBackground(new java.awt.Color(137, 161, 209));
        jDCFechaHoraVac.setForeground(new java.awt.Color(59, 66, 109));
        jDCFechaHoraVac.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N

        jTCodCita.setBackground(new java.awt.Color(137, 161, 209));
        jTCodCita.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTCodCita.setForeground(new java.awt.Color(59, 66, 109));
        jTCodCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTCodCitaActionPerformed(evt);
            }
        });

        jTCiudadano.setBackground(new java.awt.Color(137, 161, 209));
        jTCiudadano.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTCiudadano.setForeground(new java.awt.Color(59, 66, 109));

        jTDosis.setBackground(new java.awt.Color(137, 161, 209));
        jTDosis.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTDosis.setForeground(new java.awt.Color(59, 66, 109));

        jTCentroVac.setBackground(new java.awt.Color(137, 161, 209));
        jTCentroVac.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jTCentroVac.setForeground(new java.awt.Color(59, 66, 109));

        jDCFechaHoraCita.setBackground(new java.awt.Color(137, 161, 209));
        jDCFechaHoraCita.setForeground(new java.awt.Color(59, 66, 109));
        jDCFechaHoraCita.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTCodCita, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDCFechaHoraVac, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTCiudadano, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTCentroVac, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDCFechaHoraCita, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTCodCita, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTCiudadano, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jDCFechaHoraCita, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTCentroVac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jDCFechaHoraVac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Cita Vacunación", jPanel2);

        jInternalFrame1.setVisible(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);

        jBPostergarCitas.setText("Postergar citas 2 semanas");
        jBPostergarCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPostergarCitasActionPerformed(evt);
            }
        });

        jButton2.setText("Vacuna aplicada");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3)
                                    .addComponent(jButton4)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jBPostergarCitas)))
                        .addGap(0, 60, Short.MAX_VALUE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jBPostergarCitas)
                .addGap(55, 55, 55)
                .addComponent(jButton2)
                .addGap(61, 61, 61)
                .addComponent(jButton3)
                .addGap(70, 70, 70)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("", jInternalFrame1);

        jTabbedPane2.addTab("Citas", jTabbedPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTCodCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTCodCitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTCodCitaActionPerformed

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        String codCita = jTCodCita.getText();
        LocalDateTime localDateTime = null;
        if(!codCita.isEmpty()){
            JOptionPane.showMessageDialog(this, "Para agregar una cita nueva por favor deje el codigo de cita vacio");
        } else if(codCita.isEmpty()){
            int DNIc = Integer.parseInt(jTCiudadano.getText());
            Ciudadano ciudadano = ciudadanoData.buscarCiudadanoPorDNI(DNIc);
            if (ciudadano == null){
                JOptionPane.showMessageDialog(this, "Ciudadano no registrado con ese DNI");
            } else{
                String fechaHoraCita = jDCFechaHoraCita.getDate().toString();
                int IDcentro = Integer.parseInt(jTCentroVac.getText());
                CentroVacunacion centroVacunacion = centroVacunacionData.obtenerCentroVacunacionPorId(IDcentro);
                if (centroVacunacion == null){
                    JOptionPane.showMessageDialog(this, "No existe un Centro de Vacunacion registrado con ese ID");
                } else{
                    try{
                        Date fechaHoraColoca = (Date) jDCFechaHoraVac.getDate();
                        Instant instant = fechaHoraColoca.toInstant();
                        localDateTime = instant.atZone(ZoneId.systemDefault()).toLocalDateTime();
                    } catch(NullPointerException ex){
                    }
                    int nroDosis = Integer.parseInt(jTDosis.getText());
                    Vacuna vacuna = vacunaData.obtenerVacunaPorNroSerie(nroDosis);
                    if(vacuna == null){
                        JOptionPane.showMessageDialog(this, "No existe vacuna con ese numero de dosis");
                    } else{
                        int codCita2 = 0;
                        citaVacunacion cita = new citaVacunacion(codCita2, ciudadano,fechaHoraCita, centroVacunacion, localDateTime, vacuna);
                        citaData.CrearCita(cita);
                        limpiarCampos();
                    }
                }
            }
        }
    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        String codCita = jTCodCita.getText();
        if(!codCita.isEmpty()){
            int cod = Integer.parseInt(codCita);
            citaVacunacion citaVac = citaData.BuscarCitaPorCodCita(cod);
            if(citaVac != null){
                citaData.EliminarCita(cod);
                limpiarCampos();
            }else{
                JOptionPane.showMessageDialog(this, "No existe una cita con ese codigo de cita");
            }
        }else if(codCita.isEmpty()){
            JOptionPane.showMessageDialog(this, "Para buscar una cita por favor escriba un id de cita");
        }
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarActionPerformed
        String codCita = jTCodCita.getText();
        LocalDateTime localDateTime = null;
        if(!codCita.isEmpty()){
            int cod = Integer.parseInt(codCita);
            citaVacunacion citaVac = citaData.BuscarCitaPorCodCita(cod);
            if(citaVac != null){
                int DNIc = Integer.parseInt(jTCiudadano.getText());
                Ciudadano ciudadano = ciudadanoData.buscarCiudadanoPorDNI(DNIc);
                if (ciudadano == null){
                    JOptionPane.showMessageDialog(this, "Ciudadano no registrado con ese DNI");
                } else{
                    String fechaHoraCita = jDCFechaHoraCita.getDate().toString();
                    int IDcentro = Integer.parseInt(jTCentroVac.getText());
                    CentroVacunacion centroVacunacion = centroVacunacionData.obtenerCentroVacunacionPorId(IDcentro);
                    if (centroVacunacion == null){
                        JOptionPane.showMessageDialog(this, "No existe un Centro de Vacunacion registrado con ese ID");
                    } else{
                        try{
                            Date fechaHoraColoca = (Date) jDCFechaHoraVac.getDate();
                            Instant instant = fechaHoraColoca.toInstant();
                            localDateTime = instant.atZone(ZoneId.systemDefault()).toLocalDateTime();
                        } catch(NullPointerException ex){
                        }
                        int nroDosis = Integer.parseInt(jTDosis.getText());
                        Vacuna vacuna = vacunaData.obtenerVacunaPorNroSerie(nroDosis);
                        if(vacuna == null){
                            JOptionPane.showMessageDialog(this, "No existe vacuna con ese numero de dosis");
                        } else{
                            int codCita2 = 0;
                            citaVacunacion cita = new citaVacunacion(codCita2, ciudadano,fechaHoraCita, centroVacunacion, localDateTime, vacuna);
                            citaData.ModificarCita(cita);
                            limpiarCampos();
                        }
                    }
                }
            } else{
                JOptionPane.showMessageDialog(this, "No existe una cita con ese codigo de cita");
            }
        } else if(codCita.isEmpty()){
            JOptionPane.showMessageDialog(this, "Para modificar una cita por favor escriba un id de cita");
        }
    }//GEN-LAST:event_jBModificarActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        String codCita = jTCodCita.getText();
        if(!codCita.isEmpty()){
            int cod = Integer.parseInt(codCita);
            citaVacunacion citaVac = citaData.BuscarCitaPorCodCita(cod);
            if(citaVac != null){
                jTCiudadano.setText(Integer.toString(citaVac.getPersona().getDNI()));
                SimpleDateFormat formatoSinAnio = new SimpleDateFormat("EEE MMM dd HH:mm", Locale.ENGLISH);

                try {
                    java.util.Date fechaUtil = formatoSinAnio.parse(citaVac.getFechaHoraCita());
                    java.sql.Date fechaSql = new java.sql.Date(fechaUtil.getTime());
                    jDCFechaHoraCita.setDate(fechaSql);

                    // Ahora establece un nuevo formato para mostrar la fecha sin el año
                    SimpleDateFormat formatoVisualizacion = new SimpleDateFormat("EEE dd MMM HH:mm", Locale.ENGLISH);
                    jDCFechaHoraCita.setDateFormatString(formatoVisualizacion.toPattern());
                } catch (ParseException ex) {
                    Logger.getLogger(CitaVacunacionVista.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTCentroVac.setText(Integer.toString(citaVac.getCentroVacunacion().getIDcentro()));
                try{
                    Date date = (Date) Date.from(citaVac.getFechaHoraVacunacion().atZone(ZoneId.systemDefault()).toInstant());
                    jDCFechaHoraVac.setDate(date);
                } catch(NullPointerException ex){
                }
                jTDosis.setText(Integer.toString(citaVac.getMedida().getNroSerieDosis()));
            } else{
                JOptionPane.showMessageDialog(this, "No existe una cita con ese codigo de cita");
            }
        }else if(codCita.isEmpty()){
            JOptionPane.showMessageDialog(this, "Para buscar una cita por favor escriba un id de cita");
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBPostergarCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPostergarCitasActionPerformed
        citaData.postergarCita();
    }//GEN-LAST:event_jBPostergarCitasActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
             
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBModificar;
    private javax.swing.JButton jBPostergarCitas;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDCFechaHoraCita;
    private com.toedter.calendar.JDateChooser jDCFechaHoraVac;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTCentroVac;
    private javax.swing.JTextField jTCiudadano;
    private javax.swing.JTextField jTCodCita;
    private javax.swing.JTextField jTDosis;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Centro de Vacunación");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(900, 500);
            
            CitaVacunacionVista citaVacunacionVista = new CitaVacunacionVista();
            frame.add(citaVacunacionVista);
            
            frame.setVisible(true);
        });
    }
    private void limpiarCampos() {
        Date date = null;
        jTCodCita.setText("");
        jTDosis.setText("");
        jTCiudadano.setText("");
        jTCentroVac.setText("");
        jDCFechaHoraCita.setDate(date);
        jDCFechaHoraVac.setDate(date);        
    }
  private void cabecera(){
     modelo.addColumn("Codigo cita");
     modelo.addColumn("DNI ciudadano");
     modelo.addColumn("Fecha y hora cita");
     modelo.addColumn("ID centro vacunacion");
     modelo.addColumn("fecha y hora vacunacion");
     modelo.addColumn("Nro serie dosis");
     jTable1.setModel(modelo);
     
 }
  private void cargarTabla(){
      List<citaVacunacion> citasVacunacion = citaData.listarCitasCumplidas();
     for(citaVacunacion cit:citasVacunacion){
      modelo.addRow(new Object[]{
       cit.getCodCita(),
       cit.getPersona().getDNI(),
       cit.getFechaHoraCita(),
       cit.getCentroVacunacion().getIDcentro(),
       cit.getFechaHoraVacunacion(),
       cit.getMedida().getNroSerieDosis(),
      });        
     }
  }
}
